<?php

namespace Tuna\BannerSlider\Block\Adminhtml\Banner;

use Tuna\BannerSlider\Model\Status;

class Grid extends \Magento\Backend\Block\Widget\Grid\Extended
{

    protected $_bannerCollectionFactory;

    protected $_sliderCollectionFactory;

    public function __construct(
    \Magento\Backend\Block\Template\Context $context,
    \Magento\Backend\Helper\Data $backendHelper,
    \Tuna\BannerSlider\Model\ResourceModel\Banner\CollectionFactory $bannerCollectionFactory,
    \Tuna\BannerSlider\Model\ResourceModel\Slider\CollectionFactory $sliderCollectionFactory,
    array $data = []
    ) {
        $this->_bannerCollectionFactory = $bannerCollectionFactory;
        $this->_sliderCollectionFactory = $sliderCollectionFactory;
        parent::__construct($context, $backendHelper, $data);
    }


    protected function _construct()
    {
        parent::_construct();
        $this->setId('bannerGrid');
        $this->setDefaultSort('banner_id');
        $this->setDefaultDir('ASC');
        $this->setSaveParametersInSession(true);
        $this->setUseAjax(true);
    }


    protected function _prepareCollection()
    {
        $storeViewId = $this->getRequest()->getParam('store');
        $colection = $this->_bannerCollectionFactory->create()->setStoreViewId($storeViewId);
        $this->setCollection($colection);
        parent::_prepareCollection();

    }

    protected function _prepareColumns()
    {
        return parent::_prepareColumns();
    }

    public function getSliderAvailableOption()
    {
        $option = [];
        $sliderCollection = $this->_sliderCollectionFactory->create()->addFieldToSelect(['title']);
        foreach ($sliderCollection as $slider) {
            $option[$slider->getId()] = $slider->getTitle();
        }
        return $option;
    }


    protected function _prepareMassaction()
    {
        $this->setMassactionIdField('entity_id');
        $this->getMassactionBlock()->setFormFieldName('banner');

        $this->getMassactionBlock()->addItem(
            'delete',
            [
                'label' => __('Delete'),
                'url' => $this->getUrl('bannerslideradmin/*/massDelete'),
                'confirm' => __('Are you sure?')
            ]
        );

        $statuses = Status::getAvailableStatuses();

        array_unshift($statuses, ['label' => '', 'value' => '']);
        $this->getMassactionBlock()->addItem(
            'status',
            [
                'label' => __('Change Status'),
                'url' => $this->getUrl('bannerslideradmin/*/massStatus', ['_current' => true]),
                'additional' => [
                    'visibility' => [
                        'name' => 'status',
                        'type' => 'select',
                        'class' => 'required-entry',
                        'label' => __('Status'),
                        'values' => $statuses
                    ]
                ]
            ]
        );

        return $this;
    }


    public function getGridUrl()
    {
        return $this->getUrl('*/*/grid', ['_current' => true]);
    }


    public function getRowUrl($row)
    {
        return $this->getUrl(
            '*/*/edit',
            ['banner_id' => $row->getId()]
        );
    }
}